apiVersion: apps/v1
kind: Deployment
metadata:
  name: ota-integration-service
  labels:
    app: ota-integration
    version: v1
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ota-integration
  template:
    metadata:
      labels:
        app: ota-integration
        version: v1
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ota-integration
        image: your-registry/ota-integration:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3003
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3003"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: LOG_LEVEL
          value: "info"
        - name: BOOKING_API_KEY
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: booking-api-key
        - name: BOOKING_USERNAME
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: booking-username
        - name: BOOKING_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: booking-password
        - name: BOOKING_HOTEL_ID
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: booking-hotel-id
        - name: BOOKING_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: booking-webhook-secret
        - name: HOSTELWORLD_API_KEY
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: hostelworld-api-key
        - name: HOSTELWORLD_API_SECRET
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: hostelworld-api-secret
        - name: HOSTELWORLD_PROPERTY_ID
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: hostelworld-property-id
        - name: HOSTELWORLD_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: ota-secrets
              key: hostelworld-webhook-secret
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: ota-integration-service
  labels:
    app: ota-integration
    service: ota-integration
spec:
  type: ClusterIP
  ports:
  - port: 3003
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: ota-integration

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ota-integration-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ota-api.yourdomain.com
    secretName: ota-integration-tls
  rules:
  - host: ota-api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ota-integration-service
            port:
              number: 3003